[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "loggem"
version = "0.1.0"
description = "AI-Assisted Log Anomaly Detector with Configurable LLM Providers (HuggingFace, OpenAI, Anthropic, Ollama)"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "LogGem Contributors"}
]
keywords = ["security", "logs", "anomaly-detection", "ai", "llm", "gemma", "openai", "anthropic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dateutil>=2.8.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "watchdog>=3.0.0",
    "aiofiles>=23.0.0",
    "structlog>=23.0.0",
    "cryptography>=41.0.0",
    "PyYAML>=6.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
# HuggingFace provider (local models - includes Gemma 3)
huggingface = [
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "accelerate>=0.20.0",
    "bitsandbytes>=0.41.0",
]

# OpenAI provider (cloud API)
openai = [
    "openai>=1.0.0",
]

# Anthropic provider (cloud API)
anthropic = [
    "anthropic>=0.18.0",
]

# Ollama provider (local API)
ollama = [
    "requests>=2.31.0",
]

# All providers
all = [
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "accelerate>=0.20.0",
    "bitsandbytes>=0.41.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "requests>=2.31.0",
]

# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[project.scripts]
loggem = "loggem.cli:app"

[project.urls]
Homepage = "https://github.com/cbritt0n/loggem"
Documentation = "https://github.com/cbritt0n/loggem#readme"
Repository = "https://github.com/cbritt0n/loggem"
Issues = "https://github.com/cbritt0n/loggem/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
loggem = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "W", "UP", "B", "S", "C4", "DTZ", "T10", "ISC", "RET", "SIM", "ARG"]
ignore = ["E501", "S101"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*/test_*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--cov=loggem",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
