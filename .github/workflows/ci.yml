name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check src/ tests/
      continue-on-error: true

    - name: Check formatting with black
      run: |
        black --check src/ tests/
      continue-on-error: true

    - name: Type check with mypy
      run: |
        mypy src/loggem --ignore-missing-imports
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=loggem --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check src/ tests/ --output-format=github

    - name: Check formatting
      run: |
        black --check src/ tests/

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Run bandit security checks
      run: |
        bandit -r src/ -c pyproject.toml
      continue-on-error: true

    - name: Check for known security vulnerabilities
      run: |
        safety check
      continue-on-error: true

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check markdown files
      uses: DavidAnson/markdownlint-cli2-action@v15
      with:
        globs: '**/*.md'
      continue-on-error: true

    - name: Check broken links
      uses: lycheeverse/lychee-action@v1
      with:
        args: --verbose --no-progress '**/*.md' '**/*.py'
      continue-on-error: true
